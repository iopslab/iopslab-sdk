name: Upload Python Package

on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened

env:
  CRAWLAB_API_ADDRESS: http://localhost:8080/api
  PACKAGE_NAME: crawlab-sdk

jobs:
  deploy:
    runs-on: ubuntu-latest

#    services:
#      master:
#        image: crawlabteam/crawlab
#        env:
#          CRAWLAB_NODE_MASTER: Y
#          CRAWLAB_MONGO_HOST: mongo
#        ports:
#          - "8080:8080"
#      mongo:
#        image: mongo:4.2

    steps:
      - uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v18.7

      - name: Check changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file =~ ^_ext/python/.* ]]; then
              echo "file ${file} is matched"
              echo "is_matched=1" >> $GITHUB_ENV
              break
            fi
          done

      - name: Set up Python
        if: ${{ env.is_matched == '1' }}
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Install dependencies
        if: ${{ env.is_matched == '1' }}
        run: |
          cd _ext/python
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r requirements.txt

#      - name: Unit Test
#        if: ${{ env.is_matched == '1' }}
#        run: |
#          cd _ext/python
#          python setup.py install
#          crawlab-cli login -a ${{ env.CRAWLAB_API_ADDRESS }}
#          python -m unittest crawlab.test

      - name: Check version
        if: ${{ env.is_matched == '1' }}
        run: |
          cd _ext/python
          version=`python setup.py --version`
          res=`curl https://pypi.org/project/${{ env.PACKAGE_NAME }}/${version}/ -i -s | grep 'HTTP/2 404' | true`
          if [[ $res =~ 404 ]]; then
            echo "is_matched=0" >> $GITHUB_ENV 
          else:
            echo "is_matched=1" >> $GITHUB_ENV 
          fi

      - name: Build and publish
        if: ${{ env.is_matched == '1' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          cd _ext/python
          python setup.py sdist bdist_wheel
          pip install twine
          twine upload dist/*
